// Generated by CoffeeScript 1.8.0
(function() {
  this.app.directive("ngBug", [
    "$timeout", function($timeout) {
      return {
        template: "<svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\"> <ellipse class=\"wings\" ry=\"25\" rx=\"15\" cx=\"55\" cy=\"15\" style=\"fill:white;stroke:black;stoke-width:2\"/> <ellipse class=\"wings\" ry=\"25\" rx=\"15\" cx=\"65\" cy=\"15\" style=\"fill:white;stroke:black;stoke-width:2\"/> <ellipse class=\"body\" ry=\"20\" rx=\"45\" cx=\"55\" cy=\"35\" style=\"stroke:black;stoke-width:2\"/> <ellipse ry=\"12.54878\" rx=\"13.18333\" class=\"body head\" cy=\"18.54878\" cx=\"101.81662\" style=\"stroke:black;stoke-width:4\" /> <ellipse class=\"eye\" ry=\"1.53659\" rx=\"1.61429\" id=\"svg_9\" cy=\"15.47561\" cx=\"106.92853\"  style=\"fill:black;stroke:black;stroke-width:1\" /> <ellipse class=\"eye\" ry=\"1.53659\" rx=\"1.61429\" cy=\"14.96341\" cx=\"97.24282\" style=\"fill:black;stroke:black;stroke-width:1\" /> </svg>",
        compile: function(scope, element, attrs) {
          return {
            pre: function(scope, element, attrs) {
              var ele, prop, properties, _i, _len, _ref, _results;
              element.find('.body').attr('fill', attrs.color);
              _ref = element.children().children();
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                ele = _ref[_i];
                properties = ['rx', 'ry', 'cx', 'cy'];
                _results.push((function() {
                  var _j, _len1, _results1;
                  _results1 = [];
                  for (_j = 0, _len1 = properties.length; _j < _len1; _j++) {
                    prop = properties[_j];
                    if (ele.hasOwnProperty(prop)) {
                      _results1.push($(ele).attr(prop, $(ele).attr(prop) * attrs.ratio));
                    } else {
                      _results1.push(void 0);
                    }
                  }
                  return _results1;
                })());
              }
              return _results;
            }
          };
        }
      };
    }
  ]);

  this.app.directive("socketSubmit", function() {
    return {
      controller: function($scope, $element, $attrs, $location) {
        return $($element).submit(function() {
          $scope.user.name = $($element).find('input').val();
          socket.emit('new_top_score', {
            name: $scope.user.name,
            score: $scope.user.score
          });
          return $scope.$apply($location.path('/game_over'));
        });
      }
    };
  });

}).call(this);
